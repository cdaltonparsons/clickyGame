{"version":3,"sources":["components/Card.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","style","maxWidth","margin","alt","name","src","image","onClick","handleClick","id","App","state","cards","currentScore","highScore","clicked","handleShuffle","_this","setState","_","shuffle","console","log","includes","handleReset","handleIncrement","newArr","concat","newScore","alert","_this2","this","Fragment","map","card","components_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8PAYeA,MAVf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BC,MAAO,CAACC,SAAU,QAASC,OAAQ,KAC/EN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOC,QAAS,kBAAMZ,EAAMa,YAAYb,EAAMc,yCCqFpEC,6MApFbC,MAAQ,CACNC,QACAC,aAAc,EACdC,UAAW,EACXC,QAAS,MAGXC,cAAgB,WACdC,EAAKC,SAAS,CAAEN,MAAOO,IAAEC,QAAQH,EAAKN,MAAMC,YAG9CJ,YAAc,SAAAC,GAEZ,GADAY,QAAQC,IAAI,WACPL,EAAKN,MAAMI,QAAQQ,SAASd,GAO/BQ,EAAKO,cACLP,EAAKD,oBAR+B,CACpCC,EAAKQ,kBACL,IAAMC,EAAST,EAAKN,MAAMI,QAAQY,OAAOlB,GACzCQ,EAAKC,SAAS,CAAEH,QAASW,IACzBL,QAAQC,IAAI,eAAgBL,EAAKN,MAAMI,SACvCE,EAAKD,oBAOTS,gBAAkB,WAChB,IAAMG,EAAWX,EAAKN,MAAME,aAAe,EAC3CI,EAAKC,SAAS,CACZL,aAAce,IAEZA,GAAYX,EAAKN,MAAMG,UACzBG,EAAKC,SAAS,CAAEJ,UAAWc,IACU,KAA5BX,EAAKN,MAAME,eACpBgB,MAAM,6BACNZ,EAAKO,kBAITA,YAAc,WACZP,EAAKC,SAAS,CACZL,aAAc,EACdC,UAAWG,EAAKN,MAAMG,UACtBC,QAAS,KAEXE,EAAKD,yFAGE,IAAAc,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,mBACUiC,KAAKpB,MAAME,aADrB,kBACkDkB,KAAKpB,MAAMG,YAG/DlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,uCACsCH,EAAAC,EAAAC,cAAA,gCAEtCF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uMAMFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZgC,KAAKpB,MAAMC,MAAMqB,IAAI,SAAAC,GAAI,OACxBtC,EAAAC,EAAAC,cAACqC,EAAD,CACEpC,UAAU,mBACVqC,IAAKF,EAAKzB,GACVL,KAAM8B,EAAK9B,KACXE,MAAO4B,EAAK5B,MACZG,GAAIyB,EAAKzB,GACTD,YAAasB,EAAKtB,YAClBgB,YAAaM,EAAKN,YAClBC,gBAAiBK,EAAKL,6BA5ElBY,aCAlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.898614d1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card border-primary mb-3\" style={{maxWidth: \"20rem\", margin: 10}}>\n  <div className=\"card-body\">\n    <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)}/>\n  </div>\n  </div>\n  );\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\nimport _ from \"lodash\";\n\nclass App extends Component {\n  state = {\n    cards,\n    currentScore: 0,\n    highScore: 0,\n    clicked: []\n  };\n\n  handleShuffle = () => {\n    this.setState({ cards: _.shuffle(this.state.cards) });\n  };\n\n  handleClick = id => {\n    console.log(\"clicked\");\n    if (!this.state.clicked.includes(id)) {\n      this.handleIncrement();\n      const newArr = this.state.clicked.concat(id);\n      this.setState({ clicked: newArr });\n      console.log(\"this.clicked\", this.state.clicked);\n      this.handleShuffle();\n    } else {\n      this.handleReset()\n      this.handleShuffle();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore\n    });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    } else if (this.state.currentScore === 12) {\n      alert(\"You won! Congratulations!\");\n      this.handleReset();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\n          <p>\n            Score: {this.state.currentScore} | High Score: {this.state.highScore}\n          </p>\n        </nav>\n        <div className=\"jumbotron bg-info\">\n          <h1 className=\"display-3\">\n            Welcome to the critically acclaimed <strong>Clicky Game!!</strong>\n          </h1>\n          <p className=\"lead\">\n            The rules are simple. Click an image to score a point. Your score\n            will increment each time you click a unique image. Clicking an image\n            you've already clicked on will reset your score. Good Luck!\n          </p>\n        </div>\n        <div className=\"row\">\n          {this.state.cards.map(card => (\n            <Card\n              className=\"cardImg col-md-3\"\n              key={card.id}\n              name={card.name}\n              image={card.image}\n              id={card.id}\n              handleClick={this.handleClick}\n              handleReset={this.handleReset}\n              handleIncrement={this.handleIncrement}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}